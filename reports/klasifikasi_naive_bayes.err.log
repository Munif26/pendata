Traceback (most recent call last):
  File "/usr/local/lib/python3.11/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.11/dist-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.11/dist-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.11/dist-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Pastikan kolom 'class' ada sebelum menghapusnya
if 'class' in data.columns:
    data = data.drop(columns=['class'])  # Hapus kolom 'class' jika ada

# LOF untuk mendeteksi outlier
lof_model = LocalOutlierFactor(n_neighbors=3, metric='euclidean')

lof_labels = lof_model.fit_predict(data)  # -1 = outlier, 1 = inlier
lof_values = -lof_model.negative_outlier_factor_

# Tampilkan LOF dan label untuk setiap data point
for i in range(len(data)):
    print(f"Indeks-{i} â†’ LOF: {lof_values[i]:.4f}, Label: {'Outlier' if lof_labels[i] == -1 else 'Inlier'}")

filtered_data = data[lof_labels == 1]  # Hanya simpan data yang bukan outlier
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-3-cfea163ba081>[0m in [0;36m<cell line: 0>[0;34m()[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;31m# LOF untuk mendeteksi outlier[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0mlof_model[0m [0;34m=[0m [0mLocalOutlierFactor[0m[0;34m([0m[0mn_neighbors[0m[0;34m=[0m[0;36m3[0m[0;34m,[0m [0mmetric[0m[0;34m=[0m[0;34m'euclidean'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0;34m[0m[0m
[1;32m      8[0m [0mlof_labels[0m [0;34m=[0m [0mlof_model[0m[0;34m.[0m[0mfit_predict[0m[0;34m([0m[0mdata[0m[0;34m)[0m  [0;31m# -1 = outlier, 1 = inlier[0m[0;34m[0m[0;34m[0m[0m

[0;31mNameError[0m: name 'LocalOutlierFactor' is not defined

